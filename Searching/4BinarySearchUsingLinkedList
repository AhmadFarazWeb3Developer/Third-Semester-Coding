
// Binary search using Linked List

#include<iostream>
using namespace std;
class Node {
public:
	int data;
	Node* nextAddress;

	Node(int data) {
		this->data = data;
		this->nextAddress = NULL;
	}
};

class LinkedList {
public:
	Node* head;
	LinkedList() {
		head = NULL;
	}
	void insert(int data) {
		Node* newNode = new Node(data);
		if (head == NULL) {
			head = newNode;
			return;
		}
		Node* tempNode = head;
		while (tempNode->nextAddress != NULL) {
			tempNode = tempNode->nextAddress;
		}
		tempNode->nextAddress = newNode;
	}

	void display() {
		Node* tempNode = head;
		while (tempNode != NULL) {
			cout << tempNode->data << " ";
			tempNode = tempNode->nextAddress;
		}
		cout << endl;
	}
	bool search(int element) {
		Node* tempNode = head;
		while (tempNode != NULL) {
			if (tempNode->data == element) {
				return true;
			}
			tempNode = tempNode->nextAddress;
		}
		return false;
	}
};

int main() {
	LinkedList list;
	int size, element, num;

	cout << "How many elements you want to enter : ";
	cin >> size;

	cout << "Enter the elements : " << endl;
	for (int i = 0; i < size; i++) {
		cout << "Enter " << i + 1 << " element ";
		cin >> num;
		list.insert(num);
	}
	cout << "Enter the element to search for: ";
	cin >> element;
	bool found = list.search(element);
	if (found) {
		cout << element << " found in the linked list." << endl;
	}
	else {
		cout << element << " not found in the linked list." << endl;
	}
	return 0;
}
